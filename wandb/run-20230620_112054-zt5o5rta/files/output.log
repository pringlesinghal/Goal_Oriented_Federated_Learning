
  0%|          | 0/100 [00:00<?, ?it/s]
  0%|          | 0/100 [00:00<?, ?it/s]/content/gdrive/MyDrive/AAU_Project/Goal_Oriented_Federated_Learning/fl_methods.py:271: RuntimeWarning: invalid value encountered in double_scalars
  print(f'np.sqrt(np.log(communication_round + 1) / nk[idx]) = {np.sqrt(np.log(communication_round + 1) / nk[idx])}')
/content/gdrive/MyDrive/AAU_Project/Goal_Oriented_Federated_Learning/fl_methods.py:273: RuntimeWarning: invalid value encountered in double_scalars
  np.log(communication_round + 1) / nk[idx]
  1%|          | 1/100 [00:12<19:51, 12.03s/it]
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.0
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
nk[idx] = 0
np.sqrt(np.log(communication_round + 1) / nk[idx]) = nan
loss = 2.2953, accuracy = 10.020

  2%|▏         | 2/100 [00:17<14:27,  8.85s/it]
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977
nk[idx] = 1
np.sqrt(np.log(communication_round + 1) / nk[idx]) = 0.8325546111576977